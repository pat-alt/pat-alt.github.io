{"title":"How I'm building this website in R","markdown":{"yaml":{"title":"How I'm building this website in R","author":"Patrick Altmeyer","date":"2021-02-02","categories":["blogdown","rmarkdown","C++"],"description":"A small post on how (I used to) build this website using `blogdown`.","comments":{"utterances":{"repo":"pat-alt/blog"}}},"headingText":"Getting started","containsRefs":false,"markdown":"\n\n:::{.callout-note}\n\n**Update on Feb 20, 2022**\n\nThe post below was written when I still used `blogdown` in combination with Hugo to build this blog. I have recently migrated the blog (along pretty much everything else I do) to [quarto](https://quarto.org/). \n\n> Quarto® is an open-source scientific and technical publishing system built on Pandoc.\n\nBased on my first few experiences I would go further and say that quarto is *the only* open-source scientific and technical publishing system you'll ever need. The project is supported by RStudio and (unsurprisingly) Yihui Xie is one of the contributors. Go check it out!\n:::\n\n\nIt turns out building a static website in R is remarkably easy, as long as you know your way around R Markdown. Knowledge of HTML and CSS helps, but is not strictly necessary and can be acquired along the way. My package of choice for this website is `blogdown` by [Yihui Xie](https://yihui.org/) who has had a major impact on the R community through his many package contributions (`knitr`, `bookdown`, `pagedown`, ...) and certainly made my life a lot easier on many occasions. \n\nTo get started just follow the instructions on `blogdown`'s [GitHub repository](https://github.com/rstudio/blogdown) or keep reading here for a high-level overview. Setting up a basic website in R requires exactly two steps:\n\n1. Set up a local directory for the website. Let's suppose you create it here `~/Documents/myAwesomeWebsite`.\n\n2. In R, navigate to the directory and simply run `blogdown::newsite()`.\n\nThis will set up a basic template which you can develop. Changing the theme and playing with the basic structure of the website is relatively straight-forward. Personally I have so far managed to work things out based on a working knowledge of HTML and CSS that I've developed in the past through my work with R Shiny.\n\n## Deploying your website\n\nThere are various ways to deploy your website, i.e. make it accessible to the public. This website is deployed through GitHub pages. Detailed instructions on how to do this can be found [here](https://bookdown.org/yihui/blogdown/github-pages.html). Since I already had an existing local clone of my `pat-alt.github.io` repo, I just dropped it in the source directory of the website:\n\n```\nsource/\n│\n├── config.yaml\n├── content/\n├── themes/\n└── ...\n\npatalt.github.io/\n│\n├── .git/\n├── .nojekyll\n├── index.html\n├── about/\n└── ...\n```\n\nAfter adding `publishDir: pat-alt.github.io` to my `config.yaml` and then running `blogdown::hugo_build()` the website was built inside the clone. All that was left to do was to commit changes from the local clone to the `pat-alt.github.io` remote repo. A few moments later the website was already up and running.\n\n## Why all the trouble?\n\nThere are certainly easier ways to build a website. But if like me you do pretty much all your work in R Markdown and want to share some of it, then you will love `blogdown`. The beauty of it is that once the basic infrastructure is set up, adding content is as simple as running the following wrapper function\n\n```{r, eval=FALSE}\nblogdown::new_post(\"Your new post\", ext = \".Rmd\")\n```\n\nwhere the first argument is just the title of your post and the `ext` argument can be used to specify that you want to create an R Markdown document that can include code chucks. The wrapper function will automatically set up a directory for your post under `/post/`. R Studio will redirect you to the relevant `.Rmd` file that you can then fill with content. By default that folder will look roughly like this:\n\n```\n├── index.Rmd\n├── index.html\n└── index_files\n    └── header-attrs\n        └── header-attrs.js\n```\n\n## A simple coding example\n\nAs you can probably tell from the code chunks above this post was created just in the way I described. So I thought I might as well go ahead with a simple coding example to add some flavour. Suppose you have built some function that you think is worth sharing with the world or simply learned something new and interesting. As a case in point, I recently had a look at the `Rcpp` package and wrote a small program in C++ to be used in R. Since R Markdown supports `Rcpp` code chunks (along with Python, bash, SQL, ...) it is straight-forward to show-case that code on this website. \n\nThe program can be used to simulate data from a categorical distribution. This distribution describes the possible results of a random variable that can take on one of $K$ possible categories with different probabilities. In base R we could use `rmultinom(n=1000,1,p=c(0.5,0.1,0.4))` to simulate draws from one such distribution with three different categories. Alternatively, we could write the program in C++ as follows:\n\n```{Rcpp}\n#include <Rcpp.h>\nusing namespace Rcpp;\n\n// [[Rcpp::export]]\nNumericMatrix simCategorical(int n, NumericVector p) {\n  int k = p.size();\n  NumericMatrix mat(k, n);\n  // Normalise prob if necessary:\n  if (sum(p)!=1) {\n    p = p/sum(p);\n  }\n  NumericVector emp_cdf = cumsum(p);\n  NumericVector u = Rcpp::runif(n, 0, 1);\n  // Matrix for 1-hot-encoding:\n  for (int j = 0; j < n; j++) {\n    // Perform binary search:\n    int l = 0;\n    int r = k;\n    double target = u[j];\n    while (l < r) {\n      int m = floor((l+r)/2);\n      if (emp_cdf[m] > target) {\n        r = m;\n      } else {\n        l = m+1;\n      }\n    }\n    mat(r,j) = 1;\n  }\n  return mat;\n}\n```\n\nIn terms of performance it turns out that the simple C++ program actually does somewhat better than the base R alternative:\n\n```{r, message=F, warning=F}\nlibrary(microbenchmark)\nlibrary(ggplot2)\nn <- 1000\np <- c(0.5,0.1,0.4)\nmb <- microbenchmark(\n    \"rmultinom\" = {rmultinom(n, 1, p)},\n    \"Rcpp\" = {simCategorical(n, p)}\n)\nautoplot(mb)\n```\n\n## Embedding existing work\n\nIf you have some existing work that you would like to share you can just use it to overwrite the `index.Rmd` file. `blogdown` supports any kind of R Markdown documents so you can use all of your favourite markdown packages (`bookdown`, `pagedown`, ...). Just make sure to specify HTML output in the YAML header.\n\n## Resources\n\nFor more information about `blogdown` see [here](https://bookdown.org/yihui/blogdown/). To inspect the code that builds this website check out my [GitHub repository](https://github.com/pat-alt/patalt).\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"self-contained-math":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","filters":["../../../../lua/include-files.lua","quarto"],"css":["../../../../styles.css"],"toc":true,"output-file":"index.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"bibliography":["https://raw.githubusercontent.com/pat-alt/bib/main/bib.bib"],"crossref":{"fig-prefix":"Figure","tbl-prefix":"Table"},"_quarto-vars":{"blog-url":"https://www.paltmeyer.com/blog/"},"theme":{"light":"flatly","dark":"darkly"},"title":"How I'm building this website in R","author":"Patrick Altmeyer","date":"2021-02-02","categories":["blogdown","rmarkdown","C++"],"description":"A small post on how (I used to) build this website using `blogdown`.","comments":{"utterances":{"repo":"pat-alt/blog"}}},"extensions":{"book":{"multiFile":true}}}}}