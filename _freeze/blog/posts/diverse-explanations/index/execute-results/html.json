{
  "hash": "1280c021c90c12724f84f71a4264452a",
  "result": {
    "markdown": "---\ntitle: Diverse Explanations for Black-Box Models\nsubtitle: Counterfactual Explanations in Julia --- Part II\ndate: '2022-12-29'\ncategories:\n  - explainable ai\n  - machine learning\n  - counterfactual explanations\n  - Julia\ndescription: This second post on Counterfactual Explanations in Julia explores the concept of diverse explanations introduced by @mothilal2020explaining.\nimage: www/intro.gif\ndraft: true\n---\n\n\n\n<!-- <div class=\"intro-gif\">\n  <figure>\n    <img src=\"www/intro.gif\">\n    <figcaption>Conformal Prediction intervals for different<br>coverage rates. As coverage grows, so does<br>the width of the prediction interval.</figcaption>\n  </figure>\n</div>\n\nThis is the third (and for now final) part of a series of posts that introduce Conformal Prediction in Julia using [`ConformalPrediction.jl`](https://github.com/pat-alt/ConformalPrediction.jl). The first [post](../conformal-prediction/index.qmd) introduced Conformal Prediction for supervised classification tasks: we learned that conformal classifiers produce set-valued predictions that are guaranteed to include the true label of a new sample with a certain probability. In the second [post](../conformal-image-classifier/) we applied these ideas to a more hands-on example: we saw how easy it is to use [`ConformalPrediction.jl`](https://github.com/pat-alt/ConformalPrediction.jl) to conformalize a Deep Learning image classifier. \n\nIn this post, we will look at regression models instead, that is supervised learning tasks involving a continuous outcome variable. Regression tasks are as ubiquitous as classification tasks. For example, we might be interested in using a machine learning model to predict house prices or the inflation rate of the Euro or the parameter size of the next large language model. In fact, many readers may be more familiar with regression models than classification, in which case it may also be easier for you to understand Conformal Prediction (CP) in this context.  -->\n\n:::{.callout-tip}\n\n## üèÉ‚Äç‚ôÄÔ∏è TL;DR\n\n1. Conformal Prediction is an interesting frequentist approach to uncertainty quantification that can even be combined with Bayes (@sec-background).\n2. It is scalable and model-agnostic and therefore well applicable to machine learning (@sec-background).\n3. [`ConformalPrediction.jl`](https://github.com/pat-alt/ConformalPrediction.jl) implements CP in pure Julia and can be used with any supervised model available from [`MLJ.jl`](https://alan-turing-institute.github.io/MLJ.jl/v0.18/) (@sec-julia).\n4. Implementing CP directly on top of an existing, powerful machine learning toolkit demonstrates the potential usefulness of this framework to the ML community (@sec-julia). \n5. Standard conformal classifiers produce set-valued predictions: for ambiguous samples these sets are typically large (for high coverage) or empty (for low coverage) (@sec-scp).\n:::\n\n## üìñ Background {#sec-background}\n\n## üì¶ Conformal Prediction in Julia {#sec-julia}\n\n## üèÅ Conclusion\n\n## üìö Further Resources\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}