{
  "hash": "16f1ab66d831f1ac32c560ec420be00f",
  "result": {
    "markdown": "---\ntitle: A year of using Quarto with Julia\nsubtitle: Tips and tricks for Julia practitioners --- Julia Eindhoven\nauthor: Patrick Altmeyer\nformat: \n  revealjs:\n    logo: /www/images/TUDelft_logo_rgb.png\n    footer: A year of using Quarto with Julia --- Patrick Altmeyer --- CC BY-NC\n    self-contained: true\n    smaller: true\n    scrollable: true\n    preview-links: auto\n    slide-number: true\n    transition: slide\n    background-transition: fade\n    fig-align: center\n    theme: [default, style.scss]\n    title-slide-attributes:  \n      data-background-image: /www/images/julia_eindhoven_logo.png\n      data-background-size: 15%\n      data-background-position: 98% 98%\n      data-background-color: \"black\"\ndraft: false\n---\n\n## Blurb\n\n> As a Julia practitioner you may want to publish your work in various forms: notebooks, Markdown, HTML, PDF and more. What if you could produce all these different outputs from the same input? I will share how I've been using Quarto with Julia, for package documentation, blogging and JuliaCon proceedings. \n\n**DISCLAIMER**: Views presented in this presentation are my own. I do not represent Quarto or Posit (RStudio).\n\n## Quick Intro\n\n::::{.columns}\n\n:::{.column width=\"60%\"}\n\n- Currently 2nd year of PhD in Trustworthy Artificial Intelligence at Delft University of Technology.\n- Working on Counterfactual Explanations and Probabilistic Machine Learning with applications in Finance.\n- Previously, educational background in Economics and Finance and two years at the Bank of England.\n- Enthusiastic about free open-source software, in particular Julia and Quarto. \n\n:::\n\n:::{.column width=\"40%\"}\n\n<img src=\"/www/images/profile.jpg\" height=\"auto\" width=\"250\" style=\"border-radius:50%; display: block; margin-left: auto; margin-right: auto;\">\n\n<div style=\"text-align: center;\">\n  <p style=\"display: inline; vertical-align: middle\"> \n    <a href=\"https://www.linkedin.com/in/patrick-altmeyer-a2a25494/\" style=\"display: inline-block; color: rgb(207, 142, 255) !important;\">\n      <font style=\"\">\n        <img width=\"60\" height=\"60\" src=\"https://s1g.s3.amazonaws.com/d0fc399dee4218d1e0e0399b8947acab.png\" alt=\"LinkedIn (Personal)\" style=\"border: none; max-width: 100%; height: 60px !important;\">\n      </font>\n    </a>\n    <a href=\"https://twitter.com/paltmey\" style=\"display: inline-block; color: rgb(207, 142, 255) !important;\">\n      <font style=\"\">\n        <img width=\"60\" height=\"60\" src=\"https://s1g.s3.amazonaws.com/3949237f892004c237021ac9e3182b1d.png\" alt=\"Twitter\" style=\"border: none; max-width: 100%; height: 60px !important;\">\n      </font>\n    </a>\n    <a href=\"https://github.com/pat-alt\" style=\"display: inline-block; color: rgb(207, 142, 255) !important;\">\n      <font style=\"\">\n        <img width=\"60\" height=\"60\" src=\"https://s1g.s3.amazonaws.com/47f4eb2d0082a8a3611d614b75a09db8.png\" alt=\"Github\" style=\"border: none; max-width: 100%; height: 60px !important;\">\n      </font>\n    </a>\n    <a href=\"https://medium.com/@patrick.altmeyer\" style=\"display: inline-block; color: rgb(207, 142, 255) !important;\">\n      <font style=\"\">\n        <img width=\"60\" height=\"60\" src=\"https://s1g.s3.amazonaws.com/175f49662614345cb7dbb95fce3f88af.png\" alt=\"Medium\" style=\"border: none; max-width: 100%; height: 60px !important;\">\n      </font>\n    </a>\n  </p>\n</div>\n\n<img src=\"/www/images/qr.png\" height=\"auto\" width=\"100\" style=\"display: block; margin-left: auto; margin-right: auto;\">\n:::\n\n::::\n\n# What is Quarto? {background-image=\"/www/images/quarto.png\" background-color=\"white\" background-size=\"10%\" background-position=\"95% 95%\"}\n\n## Quarto -- A New (Old) Way to Publish Science\n\n- Have used R Markdown for many years for essentially anything work-related.\n- Generate multiple different output formats with ease:\n    - The old school: LaTeX and PDF (including [Beamer](https://quarto.org/docs/presentations/beamer.html)); MS Office\n    - The brave new world: beautiful HTML content \n        - websites\n        - e-books\n        - apps\n        - ...\n- All of this starting from the same place ...\n\n> A plain Markdown document blended with **your favourite programming language** of your choice and a YAML header defining your output.\n\n# Quarto with Julia {background-image=\"/www/images/julia_quarto.gif\" background-color=\"black\" background-size=\"25%\" background-position=\"95% 95%\"}\n\n## Setup\n\n::::{.columns}::::\n:::{.column width='50%'}\n\n:::{.fragment .fade-down}\n\n#### Preferred setup: VSCode, Quarto and Julia\n\n- Can switch between Jupyter and `.qmd` with ease.\n- When working with `.qmd`, code chunks connect to REPL.\n\n:::\n\n:::{.fragment .fade-right}\n\n#### `Documenter.jl` and Quarto\n\n\n- [Generally](https://github.com/quarto-dev/quarto-cli/discussions/408) play nicely with each other (both Markdown based).\n\n```yaml\nformat: \n  commonmark:\n    variant: -raw_html\n```\n\n- You get some stuff for free, e.g. citation management.\n- Unfortunately lose support for cross-referencing ...\n\n:::\n\n:::{.fragment .fade-up}\n\n#### Suggestion: Quarto for JuliaCon Proceedings\n\n- Quarto supports LaTex templates/classes ...\n- ... but why only publish proceedings in PDF form?\n- Quarto opens gateway to more innovative forms of publishing!\n\n:::\n\n:::\n:::{.column width='50%'}\n\n::: {.cell execution_count=1}\n``` {.julia .cell-code}\nusing Javis, Animations, Colors\nwww_path = \"www/images\"\n\nsize = 600\nradius_factor = 0.33\n\nfunction ground(args...)\n    background(\"transparent\")\n    sethue(\"white\")\nend\n\nfunction rotate_anim(idx::Number, total::Number) \n    distance_circle = 0.875\n    steps = collect(range(distance_circle,1-distance_circle,length=total))\n    Animation(\n        [0, 1], # must go from 0 to 1\n        [0, steps[idx]*2œÄ],\n        [sineio()],\n    )\nend\n\ntranslate_anim = Animation(\n    [0, 1], # must go from 0 to 1\n    [O, Point(size*radius_factor, 0)],\n    [sineio()],\n)\n\ntranslate_back_anim = Animation(\n    [0, 1], # must go from 0 to 1\n    [O, Point(-(size*radius_factor), 0)],\n    [sineio()],\n)\n\njulia_colours = Dict(\n    :blue => \"#4063D8\",\n    :green => \"#389826\",\n    :purple => \"#9558b2\",\n    :red => \"#CB3C33\"\n)\ncolour_order = [:red, :purple, :green, :blue]\nn_colours = length(julia_colours)\nfunction color_anim(start_colour::String, quarto_col::String=\"#4b95d0\")\n    Animation(\n        [0, 1], # must go from 0 to 1\n        [Lab(color(start_colour)), Lab(color(quarto_col))],\n        [sineio()],\n    )\nend\n\nvideo = Video(size, size)\n\nframe_starts = 1:10:40\nn_total = 250\nn_frames = 150\nBackground(1:n_total, ground)\n\n# Blob:\nfunction element(; radius = 1)\n    circle(O, radius, :fill) # The 4 is to make the circle not so small\nend\n\n# Cross:\nfunction cross(color=\"black\";orientation=:horizontal)\n    sethue(color)\n    setline(10)\n    if orientation==:horizontal\n        out = line(Point(-size,0),Point(size,0), :stroke)\n    else\n        out = line(Point(0,-size),Point(0,size), :stroke)\n    end\n    return out\nend\n\nfor (i, frame_start) in enumerate(1:10:40)\n\n    # Julia circles:\n    blob = Object(frame_start:n_total, (args...;radius=1) -> element(;radius=radius))\n    act!(blob, Action(1:Int(round(n_frames*0.25)), change(:radius, 1 => 75))) # scale up\n    act!(blob, Action(n_frames:(n_frames+50), change(:radius, 75 => 250))) # scale up further\n    act!(blob, Action(1:30, translate_anim, translate()))\n    act!(blob, Action(31:120, rotate_anim(i, n_colours), rotate_around(Point(-(size*radius_factor), 0))))\n    act!(blob, Action(121:150, translate_back_anim, translate()))\n    act!(blob, Action(1:150, color_anim(julia_colours[colour_order[i]]), sethue()))\n\n    # Quarto cross:\n    cross_h = Object((n_frames+50):n_total, (args...) -> cross(;orientation=:horizontal))\n    cross_v = Object((n_frames+50):n_total, (args...) -> cross(;orientation=:vertical))\nend\n\nrender(\n    video;\n    pathname = joinpath(www_path, \"julia_quarto.gif\"),\n)\n```\n:::\n\n\n:::\n::::\n\n# Questions & Answers ‚ùì {background-color=\"black\" background-size=\"20%\" background-position=\"98% 98%\" background-image=\"/www/images/julia_eindhoven_logo.png\"}\n\n# Packages I've built ... üì¶ {background-image=\"/www/images/julia.gif\" background-size=\"20%\" background-position=\"98% 98%\"}\n\n## [`CounterfactualExplanations.jl`]\n\n## [`LaplaceRedux.jl`](https://github.com/pat-alt/LaplaceRedux.jl)\n\n[![Stable](https://img.shields.io/badge/docs-stable-blue.svg)](https://pat-alt.github.io/LaplaceRedux.jl/stable) [![Dev](https://img.shields.io/badge/docs-dev-blue.svg)](https://pat-alt.github.io/LaplaceRedux.jl/dev) [![Build Status](https://github.com/pat-alt/LaplaceRedux.jl/actions/workflows/CI.yml/badge.svg?branch=main)](https://github.com/pat-alt/LaplaceRedux.jl/actions/workflows/CI.yml?query=branch%3Amain) [![Coverage](https://codecov.io/gh/pat-alt/LaplaceRedux.jl/branch/main/graph/badge.svg)](https://codecov.io/gh/pat-alt/LaplaceRedux.jl)\n\nJuliaCon 22: [Effortless Bayesian Deep Learning through Laplace Redux](https://pretalx.com/juliacon-2022/talk/Z7MXFS/)\n\n::::{.columns}\n:::{.column width=\"50%\"}\n\n`LaplaceRedux.jl` is a small package that can be used for effortless Bayesian Deep Learning and Logistic Regression trough Laplace Approximation. It is inspired by this Python [library](https://aleximmer.github.io/Laplace/index.html#setup) and its companion [paper](https://arxiv.org/abs/2106.14806).\n\n![Plugin Approximation (left) and Laplace Posterior (right) for simple artificial neural network.](/www/images/posterior_predictive_mlp.png)\n\n:::\n\n:::{.column width=\"50%\"}\n![Simulation of changing posteriour predictive distribution. Image by author.](https://raw.githubusercontent.com/pat-alt/LaplaceRedux.jl/main/dev/resources/juliacon22/www/intro.gif){width=\"70%\"}\n:::\n\n::::\n\n## [`ConformalPrediction.jl`](https://github.com/pat-alt/ConformalPrediction.jl)\n\n[![Stable](https://img.shields.io/badge/docs-stable-blue.svg)](https://pat-alt.github.io/ConformalPrediction.jl/stable/)\n[![Dev](https://img.shields.io/badge/docs-dev-blue.svg)](https://pat-alt.github.io/ConformalPrediction.jl/dev/)\n[![Build Status](https://github.com/pat-alt/ConformalPrediction.jl/actions/workflows/CI.yml/badge.svg?branch=main)](https://github.com/pat-alt/ConformalPrediction.jl/actions/workflows/CI.yml?query=branch%3Amain)\n[![Coverage](https://codecov.io/gh/pat-alt/ConformalPrediction.jl/branch/main/graph/badge.svg)](https://codecov.io/gh/pat-alt/ConformalPrediction.jl)\n[![Code Style: Blue](https://img.shields.io/badge/code%20style-blue-4495d1.svg)](https://github.com/invenia/BlueStyle)\n[![ColPrac: Contributor‚Äôs Guide on Collaborative Practices for Community Packages](https://img.shields.io/badge/ColPrac-Contributor's%20Guide-blueviolet.png)](https://github.com/SciML/ColPrac)\n[![Twitter Badge](https://img.shields.io/twitter/url/https/twitter.com/paltmey.svg?style=social&label=Follow%20%40paltmey)](https://twitter.com/paltmey)\n\n`ConformalPrediction.jl` is a package for Uncertainty Quantification (UQ) through Conformal Prediction (CP) in Julia. It is designed to work with supervised models trained in [MLJ](https://alan-turing-institute.github.io/MLJ.jl/dev/) [@blaom2020mlj]. Conformal Prediction is distribution-free, easy-to-understand, easy-to-use and model-agnostic.\n\n![Conformal Prediction in action: Prediction sets for two different samples and changing coverage rates. As coverage grows, so does the size of the prediction sets.](https://raw.githubusercontent.com/pat-alt/blog/main/posts/conformal-prediction/www/medium.gif)\n\n## More Resources üìö\n\n::::{.columns}\n\n:::{.column width=\"60%\"}\n\n> Read on ...\n\n- Related [blog](https://www.paltmeyer.com/blog/posts/julia-and-quarto-a-match-made-in-heaven/) post (hosted on this website that itself is built with Quarto and involves lots of Julia content). \n- Blog post introducing CE: [[TDS](https://towardsdatascience.com/individual-recourse-for-black-box-models-5e9ed1e4b4cc)], [[blog](https://www.paltmeyer.com/blog/posts/individual-recourse-for-black-box-models/)].\n- Blog post on Laplace Redux: [[TDS](https://towardsdatascience.com/go-deep-but-also-go-bayesian-ab25efa6f7b)], [[blog](https://www.paltmeyer.com/blog/posts/effortsless-bayesian-dl/)].\n- Blog post on Conformal Prediction: [[TDS](https://towardsdatascience.com/conformal-prediction-in-julia-351b81309e30)], [[blog](https://www.paltmeyer.com/blog/posts/conformal-prediction/)].\n\n> ... or get involved! ü§ó\n\n- [Contributor's Guide](https://www.paltmeyer.com/CounterfactualExplanations.jl/dev/contributing/) for `CounterfactualExplanations.jl`\n- [Contributor's Guide](file:///Users/FA31DU/code/ConformalPrediction.jl/docs/build/contribute.html) for `ConformalPrediction.jl`\n\n:::\n\n:::{.column width=\"40%\"}\n\n<img src=\"/www/images/profile.jpg\" height=\"auto\" width=\"250\" style=\"border-radius:50%; display: block; margin-left: auto; margin-right: auto;\">\n\n<div style=\"text-align: center;\">\n  <p style=\"display: inline; vertical-align: middle\"> \n    <a href=\"https://www.linkedin.com/in/patrick-altmeyer-a2a25494/\" style=\"display: inline-block; color: rgb(207, 142, 255) !important;\">\n      <font style=\"\">\n        <img width=\"60\" height=\"60\" src=\"https://s1g.s3.amazonaws.com/d0fc399dee4218d1e0e0399b8947acab.png\" alt=\"LinkedIn (Personal)\" style=\"border: none; max-width: 100%; height: 60px !important;\">\n      </font>\n    </a>\n    <a href=\"https://twitter.com/paltmey\" style=\"display: inline-block; color: rgb(207, 142, 255) !important;\">\n      <font style=\"\">\n        <img width=\"60\" height=\"60\" src=\"https://s1g.s3.amazonaws.com/3949237f892004c237021ac9e3182b1d.png\" alt=\"Twitter\" style=\"border: none; max-width: 100%; height: 60px !important;\">\n      </font>\n    </a>\n    <a href=\"https://github.com/pat-alt\" style=\"display: inline-block; color: rgb(207, 142, 255) !important;\">\n      <font style=\"\">\n        <img width=\"60\" height=\"60\" src=\"https://s1g.s3.amazonaws.com/47f4eb2d0082a8a3611d614b75a09db8.png\" alt=\"Github\" style=\"border: none; max-width: 100%; height: 60px !important;\">\n      </font>\n    </a>\n    <a href=\"https://medium.com/@patrick.altmeyer\" style=\"display: inline-block; color: rgb(207, 142, 255) !important;\">\n      <font style=\"\">\n        <img width=\"60\" height=\"60\" src=\"https://s1g.s3.amazonaws.com/175f49662614345cb7dbb95fce3f88af.png\" alt=\"Medium\" style=\"border: none; max-width: 100%; height: 60px !important;\">\n      </font>\n    </a>\n  </p>\n</div>\n\n<img src=\"/www/images/qr.png\" height=\"auto\" width=\"100\" style=\"display: block; margin-left: auto; margin-right: auto;\">\n:::\n\n::::\n\n## Image Sources\n\n- Quarto logo. Source: [Quarto](https://raw.githubusercontent.com/quarto-dev/quarto-web/main/quarto.png)\n- Julia to Quarto animation. Source: author (heavily borrowing from `Javis.jl` [tutorial](https://juliaanimators.github.io/Javis.jl/stable/tutorials/tutorial_7/))\n\n## References \n\n",
    "supporting": [
      "presentation_files"
    ],
    "filters": [],
    "includes": {}
  }
}