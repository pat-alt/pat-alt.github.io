{
  "hash": "54c5d2d0ed4e74ee78a4ba6e8ad07c70",
  "result": {
    "markdown": "---\ntitle: \"[`ConformalPrediction.jl`](https://github.com/JuliaTrustworthyAI/ConformalPrediction.jl)\"\nsubtitle: Predictive Uncertainty Quantification in Machine Learning\nauthor: \n  - name: \"Patrick Altmeyer\"\n    url: https://www.paltmeyer.com/\ninstitute: Delft University of Technology\ndate: today\ndate-format: long\nformat: \n  julia-revealjs:\n    theme: custom.scss\n    self-contained: true\n    smaller: false\n    scrollable: true\n    preview-links: auto\n    slide-number: true\n    transition: slide\n    background-transition: fade\n    fig-align: center\n    html-math-method: mathjax\n    include-in-header:\n      - text: |\n          <script>\n          MathJax = {\n            options: {\n              menuOptions: {\n                settings: {\n                  assistiveMml: false\n                }\n              }\n            }\n          };\n          </script>\nrevealjs-plugins:\n  - pointer\ncrossref: \n  prp-title: RQ\n  prp-prefix: RQ\n---\n\n\n\n## Talk Agenda\n\n::::{.columns}::::\n:::{.column width='60%'}\n1. Introduction (5min)\n2. Applications (5min)\n3. Interactive demo of [`ConformalPrediction.jl`](https://github.com/JuliaTrustworthyAI/ConformalPrediction.jl) (10min)\n4. Under Construction (5min)\n5. Q&A\n:::\n:::{.column width='40%'}\n> Code along üíª\n\nGet the file: [tinyurl.com/cpjcon2023](https://tinyurl.com/cpjcon2023)\n\n![Feeling lucky? Use binder!](www/qr_pluto.svg){width=45%}\n:::\n::::\n\n## Conformal Prediction \n\nConformal Prediction (CP) works under the premise of turning heuristic measures of Predictive Uncertainty (PU) into rigorous ones through repeated sampling or the use of calibration data.\n\n![](www/intro.gif)\n\n## Example: Split CP {.smaller}\n\n1. Proper training set and separate calibration set: $\\mathcal{D}_n=\\mathcal{D}^{\\text{train}} \\cup \\mathcal{D}^{\\text{cali}}$.\n2. Train model on proper training set: $\\hat\\mu_{i \\in \\mathcal{D}^{\\text{train}}}(X_i,Y_i)$.\n3. Compute nonconformity scores, $\\mathcal{S}$, using calibration data $\\mathcal{D}^{\\text{cali}}$ and fitted model $\\hat\\mu_{i \\in \\mathcal{D}^{\\text{train}}}$. \n4. For user-specified coverage ratio $(1-\\alpha)$ compute the corresponding quantile, $\\hat{q}$, of $\\mathcal{S}$.\n5. For the given quantile and test sample $X_{\\text{test}}$, form the corresponding conformal prediction set: $C(X_{\\text{test}})=\\{y:s(X_{\\text{test}},y) \\le \\hat{q}\\}$.\n\n::: {.callout-tip}\n## Blog posts\n\n- Conformal Classification ([[blog](https://www.paltmeyer.com/blog/posts/conformal-prediction/)], [[TDS](https://towardsdatascience.com/conformal-prediction-in-julia-351b81309e30)], [[Forem](https://forem.julialang.org/patalt/conformal-prediction-in-julia-h9n)])\n- Conformal Regression ([[blog](https://www.paltmeyer.com/blog/posts/conformal-regression/)], [[TDS](https://towardsdatascience.com/prediction-intervals-for-any-regression-model-306930d5ad9a)], [[Forem](https://forem.julialang.org/patalt/prediction-intervals-for-any-regression-model-16f5)])\n:::\n\n# [`ConformalPrediction.jl`](https://github.com/JuliaTrustworthyAI/ConformalPrediction.jl)\n\n::::{.columns}::::\n:::{.column width='65%'}\n\n- Built on top of [`MLJ.jl`](https://alan-turing-institute.github.io/MLJ.jl/dev/).\n- Compatible with [`Flux.jl`](https://fluxml.ai/) through [`MLJFlux.jl`](https://github.com/FluxML/MLJFlux.jl).\n- Many state-of-the-art CP methods implemented for regression, classification and time series modelling.\n\n:::\n:::{.column width='35%'}\n![](www/wide_logo.png)\n\n![](www/qr.svg)\n:::\n::::\n\n# üîç Applications {background-image=\"www/boston.png\" background-position=\"90% 100%\" background-size=\"50%\"}\n\n## CP meets SR \n\n> We had a great talk on [`SymbolicRegression.jl`](https://github.com/MilesCranmer/SymbolicRegression.jl) by Miles Cranmer, so I thought I'd take it for ride üèéÔ∏è\n\n::::{.columns}::::\n:::{.column width='50%'}\n\n<!-- ```{julia}\n#| echo: false \n\nusing MLJ\n\n# Inputs:\nN = 600\nxmax = 3.0\nusing Distributions\nd = Uniform(-xmax, xmax)\nX = rand(d, N)\nX = reshape(X, :, 1)\n\n# Outputs:\nnoise = 0.5\nfun(X) = X * sin(X)\nŒµ = randn(N) .* noise\ny = @.(fun(X)) + Œµ\ny = vec(y)\n\n# Partition:\ntrain, test = partition(eachindex(y), 0.4, 0.4, shuffle=true)\nXtest = selectrows(X, test)\nytest = y[test]\n``` -->\n\n```{.julia code-line-numbers=\"|6|9\"}\n# Standard MLJ workflow:\nusing MLJ\nimport SymbolicRegression: SRRegressor\nmodel = SRRegressor(\n  niterations=50,\n  binary_operators=[+, -, *],\n  unary_operators=[sin],\n)\n\n# Conformalize:\nusing ConformalPrediction\nconf_model = conformal_model(model)\nmach = machine(conf_model, X, y)\nfit!(mach, rows=train)\n```\n\n:::\n:::{.column width='50%'}\n\n<!-- ```{julia}\n#| output: true\n#| echo: false\n\nusing Plots\nzoom = 0\nplt = plot(mach.model, mach.fitresult, Xtest, ytest, lw=5, zoom=zoom, observed_lab=\"Test points\")\nxrange = range(-xmax+zoom,xmax-zoom,length=N)\nplot!(plt, xrange, @.(fun(xrange)), lw=3, ls=:dash, colour=:black, label=\"Ground truth\", size=(500,400))\nsavefig(plt, joinpath(POST_DIR, \"www/sr.png\"))\n``` -->\n\n![](www/sr.png){width=100%}\n\n:::\n::::\n\n## Conformal Chatbot\n\n::: {.panel-tabset}\n\n### Overview\n\n![High-level overview of Conformal Intent Classifier. Won 1st üèÜ at ING Global Experiment Week 2023.](www/llm.jpeg){#fig-llm width=80%}\n\n### Demo\n\n::::{.columns}::::\n:::{.column width='55%'}\n![Demo of a REPL-based conformalized intent classifier.](www/llm-demo.gif){#fig-llm-demo width=75%}\n:::\n:::{.column width='45%'}\n\nCICC substantially outperforms baseline approaches (e.g. top-$K$).\n\n::: {.callout-tip}\n \n## Blog post\n\nBuilding a Conformal Chatbot in Julia ([blog](https://www.paltmeyer.com/blog/posts/conformal-llm/), [TDS](https://medium.com/towards-data-science/building-a-conformal-chatbot-in-julia-1ed23363a280))\n:::\n:::\n::::\n\n:::\n\n## Conformal Image Classifier\n\n::::{.columns}::::\n:::{.column width='60%'}\nA simple MNIST classifier.\n\n```{.julia}\n# MLJFlux workflow:\nusing MLJFlux\nImageClassifier = @load ImageClassifier\n\n# Conformalize:\nusing ConformalPrediction\nconf_model = conformal_model(clf)\nmach = machine(conf_model, X, y)\nfit!(mach)\n```\n\n:::\n:::{.column width='40%'}\n![Probably a 7 ü§î](www/img-clf.png){#fig-mnist width=60%}\n:::\n::::\n\n::: {.callout-tip}\n## Blog post\n\nHow to Conformalize a Deep Image Classifier ([blog](https://www.paltmeyer.com/blog/posts/conformal-image-classifier/), [TDS](https://medium.com/towards-data-science/how-to-conformalize-a-deep-image-classifier-14ead4e1a5a0), [Forem](https://forem.julialang.org/patalt/how-to-conformalize-a-deep-image-classifier-50p2))\n:::\n\n## Time Series\n\n::::{.columns}::::\n:::{.column width='45%'}\nEnsemble Batch Prediction Intervals [@xu2021conformal] contributed by [Mojtaba Farmanbar](https://www.linkedin.com/in/mfarmanbar/) üì£.\n\n::: {.callout-tip}\n## Tutorial\n\nHow to Conformalize a Time Series Model ([docs](https://juliatrustworthyai.github.io/ConformalPrediction.jl/stable/how_to_guides/timeseries/)) \n:::\n\n:::\n:::{.column width='55%'}\n![EnbPI for Victoria electricity demand dataset.](www/timeseries.png){#fig-ts}\n:::\n::::\n\n# üèÉ Interactive Session {background-image=\"www/boston.png\" background-position=\"90% 100%\" background-size=\"50%\"}\n\n# üöß Under Construction {background-image=\"www/boston.png\" background-position=\"90% 100%\" background-size=\"50%\"}\n\n## Conformal Counterfactuals\n\n![@stutz2022learning introduce Conformal Training: conformal predictions (left), set size (centre) and smooth set size loss (right).](www/diff.svg){width=65%}\n\n::::{.columns}::::\n:::{.column width='65%'}\n\n![Conformal [`CounterfactualExplanations.jl`](https://github.com/juliatrustworthyai/CounterfactualExplanations.jl).](www/eccco_2.png){width=45%}\n:::\n:::{.column width='35%'}\n::: {.callout-note}\n\n## Contribute\n\nCurrently working on full conformal training implementation [[#62](https://github.com/JuliaTrustworthyAI/ConformalPrediction.jl/issues/62)].\n\n:::\n:::\n::::\n\n\n## Conformal [`LaplaceRedux.jl`](https://github.com/juliatrustworthyai/LaplaceRedux.jl)\n\n::::{.columns}::::\n:::{.column width='50%'}\n\n- Predictive posterior as heuristic [@angelopoulos2021gentle].\n- Importance Sampling [@fong2021conformal].\n\n:::\n:::{.column width='50%'}\n\n![](www/conformal-bayes.png)\n\n:::\n::::\n\n::: {.callout-note}\n\n## Contribute\n\n[`LaplaceRedux.jl`](https://github.com/juliatrustworthyai/LaplaceRedux.jl) interfaced to [`MLJFlux.jl`](https://github.com/FluxML/MLJFlux.jl). Planning to add both ideas [[#64](https://github.com/JuliaTrustworthyAI/ConformalPrediction.jl/issues/64)]. \n\n:::\n\n# üó®Ô∏è and finally ... {background-image=\"www/boston.png\" background-position=\"90% 100%\" background-size=\"50%\"}\n\n## Trustworthy AI in `Julia` {.smaller}\n\n::::{.columns}\n\n:::{.column width=\"60%\" .smaller}\n\nTaija collects Julia packages geared towards Trustworthy AI:\n\n- [`CounterfactualExplanations.jl`](https://github.com/juliatrustworthyai/CounterfactualExplanations.jl)\n- [`ConformalPrediction.jl`](https://github.com/juliatrustworthyai/ConformalPrediction.jl) \n- [`LaplaceRedux.jl`](https://github.com/juliatrustworthyai/LaplaceRedux.jl)\n- [`JointEnergyModels.jl`](https://github.com/juliatrustworthyai/JointEnergyModels.jl)\n- ...\n\n> Contributions welcome! üòä\n\n:::\n\n:::{.column width=\"40%\"}\n\n<img src=\"/www/images/qr.png\" height=\"auto\" width=\"250\" style=\"display: block; margin-left: auto; margin-right: auto;\">\n\n<div style=\"text-align: center;\">\n  <p style=\"display: inline; vertical-align: middle\"> \n    <a href=\"https://www.linkedin.com/in/patrick-altmeyer-a2a25494/\" style=\"display: inline-block; color: rgb(207, 142, 255) !important;\">\n      <font style=\"\">\n        <img width=\"60\" height=\"60\" src=\"https://s1g.s3.amazonaws.com/d0fc399dee4218d1e0e0399b8947acab.png\" alt=\"LinkedIn (Personal)\" style=\"border: none; max-width: 100%; height: 60px !important;\">\n      </font>\n    </a>\n    <a href=\"https://twitter.com/paltmey\" style=\"display: inline-block; color: rgb(207, 142, 255) !important;\">\n      <font style=\"\">\n        <img width=\"60\" height=\"60\" src=\"https://s1g.s3.amazonaws.com/3949237f892004c237021ac9e3182b1d.png\" alt=\"Twitter\" style=\"border: none; max-width: 100%; height: 60px !important;\">\n      </font>\n    </a>\n    <a href=\"https://github.com/pat-alt\" style=\"display: inline-block; color: rgb(207, 142, 255) !important;\">\n      <font style=\"\">\n        <img width=\"60\" height=\"60\" src=\"https://s1g.s3.amazonaws.com/47f4eb2d0082a8a3611d614b75a09db8.png\" alt=\"Github\" style=\"border: none; max-width: 100%; height: 60px !important;\">\n      </font>\n    </a>\n    <a href=\"https://medium.com/@patrick.altmeyer\" style=\"display: inline-block; color: rgb(207, 142, 255) !important;\">\n      <font style=\"\">\n        <img width=\"60\" height=\"60\" src=\"https://s1g.s3.amazonaws.com/175f49662614345cb7dbb95fce3f88af.png\" alt=\"Medium\" style=\"border: none; max-width: 100%; height: 60px !important;\">\n      </font>\n    </a>\n  </p>\n</div>\n\n[![](www/taija.png){width=50%}](https://github.com/JuliaTrustworthyAI)\n\n:::\n\n::::\n\n## References \n\n",
    "supporting": [
      "presentation_files"
    ],
    "filters": [],
    "includes": {}
  }
}